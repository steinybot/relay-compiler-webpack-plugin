{"version":3,"file":"index.js","sources":["../src/schema.ts","../src/compiler.ts","../src/utils.ts","../src/plugin.ts"],"sourcesContent":["import { Schema } from \"schema-utils/declarations/validate\";\n\nexport const schema: Schema = {\n  type: 'object',\n  properties: {\n    config: {\n      type: 'string',\n    },\n    watch: {\n      type: 'boolean',\n    },\n    validate: {\n      type: 'boolean',\n    },\n    output: {\n      'enum': ['debug', 'verbose', 'quiet', 'quietWithErrors']\n    },\n    repersist: {\n      type: 'boolean'\n    },\n  },\n  'additionalProperties': false,\n};\n","import spawn from 'cross-spawn';\n\nimport type { ChildProcess } from 'child_process';\nimport {WebpackError} from \"webpack\";\n\nconst RELAY = 'relay-compiler';\nconst COMPILING = 'compiling';\nconst FAILED = 'compilation failed';\n\nexport interface IRelayCompiler {\n  runOnce(): void;\n  watch(callback?: () => void): void;\n  stop(): void;\n  error?: WebpackError;\n}\n\nexport class RelayCompiler implements IRelayCompiler {\n  private subprocess?: ChildProcess;\n  error?: WebpackError;\n\n  constructor(private args: string[]) {}\n\n  runOnce() {\n    this.error = undefined;\n    const subprocess = spawn.sync(RELAY, this.args);\n    if (subprocess.stdout?.byteLength > 0) {\n      console.log(subprocess.stdout.toString('utf-8'));\n    }\n    if (subprocess.stderr?.byteLength > 0) {\n      const errorMessage = subprocess.stderr.toString('utf-8')\n      if (errorMessage.toLowerCase().includes(FAILED)) {\n        this.error = new WebpackError(errorMessage)\n      }\n    }\n    if (this.error === undefined && subprocess.error !== undefined) {\n      this.error = new WebpackError(subprocess.error.message);\n    }\n  }\n\n  // In the watch mode, we have to parse output\n  // to detect compiler's state\n  watch(callback?: () => void) {\n    if (!this.subprocess) {\n      // Start relay-compiler in watch mode\n      this.subprocess = spawn(RELAY, [...this.args, '--watch']);\n      // Clear errors during compilation\n      this.subprocess.stdout?.on('data', chunk => {\n        if (String(chunk).toLowerCase().includes(COMPILING)) {\n          this.error = undefined;\n        }\n      });\n      let failed = false;\n      this.subprocess.on('error', error => {\n        if (!failed) {\n          this.error = new WebpackError(error.message);\n          failed = true;\n          callback?.();\n        }\n      });\n      let errorMessage = '';\n      this.subprocess.stderr?.setEncoding(\"utf-8\");\n      this.subprocess.stderr?.on('data', chunk => {\n        errorMessage += chunk;\n      });\n      this.subprocess.stderr?.on('end', () => {\n        // Do something if compilation failed\n        if (errorMessage.toLowerCase().includes(FAILED) && !failed) {\n          this.error = new WebpackError(errorMessage);\n          failed = true;\n          callback?.();\n        }\n      });\n    }\n  }\n\n  stop() {\n    this.subprocess?.kill();\n    this.subprocess = undefined;\n  }\n}\n","import spawn from 'cross-spawn';\nimport { RelayCompilerPluginOptions } from './plugin';\n\nconst WATCHMAN = 'watchman';\n\nexport const checkWatchman = () => {\n  // the sync function below will fail if watchman is not installed,\n  // an error will be thrown\n  const { error } = spawn.sync(WATCHMAN, ['-v']);\n  if (error) {\n    console.log('Watchman is not installed. Ignoring watch option...');\n    return false;\n  }\n  return true;\n}\n\nexport const getRelayArgs = (options: RelayCompilerPluginOptions): string[] => {\n  // Ignore --watch and config options. Will be added later if need be\n  const { config, watch, ...args } = options;\n  let result: string[] = []\n  Object.entries(args).forEach(([key, value]) => {\n    result.push(`--${key}`);\n    if ('boolean' !== typeof value) {\n      result.push(`${value}`);\n    }\n  })\n  return config ? [...result, config] : result;\n}\n","import { validate } from 'schema-utils';\n\nimport { Compiler, WebpackError, WebpackPluginInstance } from 'webpack';\n\nimport { schema } from './schema';\nimport { IRelayCompiler, RelayCompiler } from './compiler';\nimport { checkWatchman, getRelayArgs } from './utils';\n\nconst PLUGIN_NAME = 'relay-compiler-webpack-plugin';\n\nexport enum OutputKind {\n  DEBUG = 'debug',\n  VERBOSE = 'verbose',\n  QUIET = 'quiet',\n  QUIET_WITH_ERRORS = 'quietWithErrors',\n}\n\nexport interface RelayCompilerPluginOptions {\n  config?: string;\n  watch?: boolean;\n  validate?: boolean;\n  output?: OutputKind;\n  repersist?: boolean;\n}\n\nexport class RelayCompilerPlugin implements WebpackPluginInstance {\n  static defaultOptions: RelayCompilerPluginOptions = { watch: true };\n\n  private options: RelayCompilerPluginOptions;\n  private relayCompiler: IRelayCompiler;\n\n  constructor(options: RelayCompilerPluginOptions) {\n    const merged = { ...RelayCompilerPlugin.defaultOptions, ...options };\n    validate(schema, merged, { name: PLUGIN_NAME });\n    this.options = merged;\n    this.relayCompiler = new RelayCompiler(getRelayArgs(this.options));\n  }\n\n  apply(compiler: Compiler) {\n    // In case of production build, compilation is supposed to be run manually\n    // with --validate option before the build command\n    if (process.env.NODE_ENV !== 'production') {\n      this.installErrorHandler(compiler);\n\n      if (this.options.watch && checkWatchman()) {\n        this.installWatchHandlers(compiler);\n      } else {\n        this.installHandlers(compiler);\n      }\n    }\n  }\n\n  // Collect errors and push to compilation object`\n  private installErrorHandler(compiler: Compiler) {\n    compiler.hooks.emit.tapAsync(PLUGIN_NAME, (compilation, next) => {\n      if (this.relayCompiler.error !== undefined) {\n        compilation.errors.push(this.relayCompiler.error);\n      }\n      next();\n    });\n  }\n\n  private installWatchHandlers(compiler: Compiler) {\n    // Run relay-compiler early\n    compiler.hooks.afterEnvironment.tap(PLUGIN_NAME, () => {\n      this.relayCompiler.watch(() => {\n        // Force compilation to show errors (webpack 5 only)\n        // TODO: Find a way to force rebuild for webpack 4\n        compiler.root?.watching?.invalidate();\n      });\n    });\n    // Should we kill the subprocess in case of watch close?\n    compiler.hooks.watchClose.tap(PLUGIN_NAME, () => {\n      this.relayCompiler.stop();\n    });\n  }\n\n  private installHandlers(compiler: Compiler) {\n    // Compile once at the beginning\n    compiler.hooks.afterEnvironment.tap(PLUGIN_NAME, () => {\n      this.relayCompiler.runOnce();\n    });\n    // Without watchman, compilation should be finished \n    // before wepback has started reading files\n    compiler.hooks.invalid.tap(PLUGIN_NAME, () => {\n      this.relayCompiler.runOnce();\n    });\n  }\n}\n"],"names":["spawn","WebpackError","OutputKind","validate"],"mappings":"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"}